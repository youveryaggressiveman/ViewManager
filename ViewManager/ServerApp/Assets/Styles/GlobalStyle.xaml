<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Style colors-->
    <SolidColorBrush x:Key="Red" Color="#EE204D"/>
    <SolidColorBrush x:Key="Green" Color="#A8E4A0"/>
    
    <!--Style for Button-->
    <Style TargetType="Button">
        <Setter Property="FontSize"
                Value="25" />
        <Setter Property="Margin"
                Value="20" />
        <Setter Property="Background"
                Value="{DynamicResource ColorHighlight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource ColorBotton.OnHover}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource NeutralColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource ColorBotton.Click}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource NeutralColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource ColorHighlight}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource NeutralColor}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{DynamicResource AdditionalColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius"
                        Value="5" />
            </Style>
        </Style.Resources>
    </Style>

    <!--Style for TextBox-->
    <Style TargetType="TextBox">
        <Setter Property="FontSize"
                Value="25" />
        <Setter Property="Foreground"
                Value="{DynamicResource AdditionalColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border"
                            Background="{DynamicResource MainColor}"
                            BorderBrush="{StaticResource NeutralColor}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource ColorHighlight}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource ColorHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius"
                        Value="5" />
            </Style>
        </Style.Resources>
    </Style>

    <!--Style for TextBlock-->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="{DynamicResource AdditionalColor}" />
    </Style>

    <!--Style for PasswordBox-->
    <Style TargetType="PasswordBox">
        <Setter Property="FontSize"
                Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Background="{DynamicResource MainColor}"
                            x:Name="Bd"
                            BorderBrush="{DynamicResource AdditionalColor}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ScrollViewer Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="{DynamicResource ColorHighlight}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="{DynamicResource ColorHighlight}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{DynamicResource MainColor}"
                                    TargetName="Bd" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource AdditionalColor}" />
                        </Trigger>
                        <Trigger Property="Width"
                                 Value="Auto">
                            <Setter Property="MinWidth"
                                    Value="100" />
                        </Trigger>
                        <Trigger Property="Height"
                                 Value="Auto">
                            <Setter Property="MinHeight"
                                    Value="20" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for CheckBox-->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               StrokeDashArray="1 2"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               SnapsToDevicePixels="true"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               StrokeDashArray="1 2"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               SnapsToDevicePixels="true"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{DynamicResource MainColor}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource NeutralColor}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="1"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark"
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                      Fill="{StaticResource AdditionalColor}"
                                      Margin="1"
                                      Opacity="0"
                                      Stretch="None" />
                                <Rectangle x:Name="indeterminateMark"
                                           Fill="{StaticResource AdditionalColor}"
                                           Margin="2"
                                           Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding"
                                    Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{DynamicResource MainColor}" />
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{DynamicResource ColorHighlight}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{DynamicResource AdditionalColor}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{DynamicResource AdditionalColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{DynamicResource MainColor}" />
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{DynamicResource ColorHighlight}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{DynamicResource AdditionalColor}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{DynamicResource AdditionalColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{DynamicResource MainColor}" />
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{DynamicResource ColorHighlight}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{DynamicResource AdditionalColor}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{DynamicResource AdditionalColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="1" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="0" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for ComboBox-->
    <ControlTemplate TargetType="ToggleButton"
                     x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2"
                    Name="Border"
                    BorderBrush="{DynamicResource NeutralColor}"
                    CornerRadius="5"
                    BorderThickness="1, 1, 1, 1"
                    Background="{DynamicResource MainColor}" />
            <Border Grid.Column="1"
                    Margin="1, 1, 1, 1"
                    BorderBrush="{DynamicResource NeutralColor}"
                    Name="ButtonBorder"
                    CornerRadius="0, 5, 5, 0"
                    BorderThickness="0, 0, 0, 0"
                    Background="{DynamicResource MainColor}" />

            <Path Name="Arrow"
                  Grid.Column="1"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  HorizontalAlignment="Center"
                  Fill="{DynamicResource AdditionalColor}"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver"
                     Value="True">
                <Setter Property="Panel.Background"
                        TargetName="ButtonBorder"
                        Value="{DynamicResource ColorHighlight}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked"
                     Value="True">
                <Setter Property="Panel.Background"
                        TargetName="ButtonBorder"
                        Value="{DynamicResource MainColor}" />
                <Setter Property="Shape.Fill"
                        TargetName="Arrow"
                        Value="{DynamicResource NeutralColor}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled"
                     Value="False">
                <Setter Property="Panel.Background"
                        TargetName="Border"
                        Value="{DynamicResource MainColor}" />
                <Setter Property="Panel.Background"
                        TargetName="ButtonBorder"
                        Value="{DynamicResource MainColor}" />
                <Setter Property="Border.BorderBrush"
                        TargetName="ButtonBorder"
                        Value="{DynamicResource NeutralColor}" />
                <Setter Property="TextElement.Foreground"
                        Value="{DynamicResource ForegroundColor}" />
                <Setter Property="Shape.Fill"
                        TargetName="Arrow"
                        Value="#999" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels"
                Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle"
                Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Margin"
                Value="25" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="TextElement.Foreground"
                Value="{DynamicResource ForegroundColor}" />
        <Setter Property="FrameworkElement.FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      ClickMode="Press"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                        <ContentPresenter Name="ContentSite"
                                          Margin="5, 3, 23, 3"
                                          IsHitTestVisible="False"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                        <TextBox Name="PART_EditableTextBox"
                                 Margin="3, 3, 23, 3"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden"
                                 Background="Transparent"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Focusable="True">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Name="PART_ContentHost"
                                            Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup"
                               Placement="Bottom"
                               Focusable="False"
                               AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder"
                                        Background="{DynamicResource MainColor}"
                                        Margin="0, 1, 0, 0"
                                        CornerRadius="0"
                                        BorderThickness="1,1,1,1"
                                        BorderBrush="{DynamicResource NeutralColor}" />
                                <ScrollViewer Margin="4"
                                              SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems"
                                 Value="False">
                            <Setter Property="FrameworkElement.MinHeight"
                                    TargetName="DropDownBorder"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource NeutralColor}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping"
                                 Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable"
                                 Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop"
                                    Value="False" />
                            <Setter Property="UIElement.Visibility"
                                    TargetName="PART_EditableTextBox"
                                    Value="Visible" />
                            <Setter Property="UIElement.Visibility"
                                    TargetName="ContentSite"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for ListView-->
    
</ResourceDictionary>